'''
base on the observation that changing RD to DR will add one to the sum
operations to achieve minimal value: RRR..DDD..
RRRDDD
RRDRDD(move first D)+1
RDRRDD(keep moving)+1
DRRRDD(keep moving)+1
DRRDRD(move second D)+1
...
repeat util we achieve target value
'''
def solve(m,n,target):
    # minimal possible value
    minval = (1+m)*m//2 + n-1
    # difference between target value and minimal value
    diff = target - minval
    numL = diff // (n-1)
    numR = n-1 - diff % (n-1)
    ans = numL*'D' + numR*'R' + (m-1-numL)*'D' + (n-1-numR)*'R'
    print(target, ans)

m, n = 9, 9
targets = [65,72,90,110]
for target in targets:
    solve(m,n,target)
print()
m, n = 90000, 100000
targets = [87127231192,5994891682]
for target in targets:
    solve(m,n,target)
